// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ApplicationUserListRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Zukte {

  /// <summary>Holder for reflection information generated from ApplicationUserListRequest.proto</summary>
  public static partial class ApplicationUserListRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for ApplicationUserListRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApplicationUserListRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBBcHBsaWNhdGlvblVzZXJMaXN0UmVxdWVzdC5wcm90bxIFenVrdGUiZwoa",
            "QXBwbGljYXRpb25Vc2VyTGlzdFJlcXVlc3QSGQoRY29udGludWF0aW9uVG9r",
            "ZW4YASABKAkSFAoMcGFnZVNpemVIaW50GAIgASgFEgwKBG1pbmUYAyABKAgS",
            "CgoCaWQYBCADKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Zukte.ApplicationUserListRequest), global::Zukte.ApplicationUserListRequest.Parser, new[]{ "ContinuationToken", "PageSizeHint", "Mine", "Id" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ApplicationUserListRequest : pb::IMessage<ApplicationUserListRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ApplicationUserListRequest> _parser = new pb::MessageParser<ApplicationUserListRequest>(() => new ApplicationUserListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplicationUserListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Zukte.ApplicationUserListRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationUserListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationUserListRequest(ApplicationUserListRequest other) : this() {
      continuationToken_ = other.continuationToken_;
      pageSizeHint_ = other.pageSizeHint_;
      mine_ = other.mine_;
      id_ = other.id_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationUserListRequest Clone() {
      return new ApplicationUserListRequest(this);
    }

    /// <summary>Field number for the "continuationToken" field.</summary>
    public const int ContinuationTokenFieldNumber = 1;
    private string continuationToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContinuationToken {
      get { return continuationToken_; }
      set {
        continuationToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pageSizeHint" field.</summary>
    public const int PageSizeHintFieldNumber = 2;
    private int pageSizeHint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSizeHint {
      get { return pageSizeHint_; }
      set {
        pageSizeHint_ = value;
      }
    }

    /// <summary>Field number for the "mine" field.</summary>
    public const int MineFieldNumber = 3;
    private bool mine_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Mine {
      get { return mine_; }
      set {
        mine_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_id_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> id_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Id {
      get { return id_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplicationUserListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplicationUserListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContinuationToken != other.ContinuationToken) return false;
      if (PageSizeHint != other.PageSizeHint) return false;
      if (Mine != other.Mine) return false;
      if(!id_.Equals(other.id_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContinuationToken.Length != 0) hash ^= ContinuationToken.GetHashCode();
      if (PageSizeHint != 0) hash ^= PageSizeHint.GetHashCode();
      if (Mine != false) hash ^= Mine.GetHashCode();
      hash ^= id_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ContinuationToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContinuationToken);
      }
      if (PageSizeHint != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSizeHint);
      }
      if (Mine != false) {
        output.WriteRawTag(24);
        output.WriteBool(Mine);
      }
      id_.WriteTo(output, _repeated_id_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ContinuationToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContinuationToken);
      }
      if (PageSizeHint != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSizeHint);
      }
      if (Mine != false) {
        output.WriteRawTag(24);
        output.WriteBool(Mine);
      }
      id_.WriteTo(ref output, _repeated_id_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContinuationToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContinuationToken);
      }
      if (PageSizeHint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSizeHint);
      }
      if (Mine != false) {
        size += 1 + 1;
      }
      size += id_.CalculateSize(_repeated_id_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplicationUserListRequest other) {
      if (other == null) {
        return;
      }
      if (other.ContinuationToken.Length != 0) {
        ContinuationToken = other.ContinuationToken;
      }
      if (other.PageSizeHint != 0) {
        PageSizeHint = other.PageSizeHint;
      }
      if (other.Mine != false) {
        Mine = other.Mine;
      }
      id_.Add(other.id_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContinuationToken = input.ReadString();
            break;
          }
          case 16: {
            PageSizeHint = input.ReadInt32();
            break;
          }
          case 24: {
            Mine = input.ReadBool();
            break;
          }
          case 34: {
            id_.AddEntriesFrom(input, _repeated_id_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ContinuationToken = input.ReadString();
            break;
          }
          case 16: {
            PageSizeHint = input.ReadInt32();
            break;
          }
          case 24: {
            Mine = input.ReadBool();
            break;
          }
          case 34: {
            id_.AddEntriesFrom(ref input, _repeated_id_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
